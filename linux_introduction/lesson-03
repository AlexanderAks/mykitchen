1) Создание, копирование файлов, создание символических и жестких ссылок. Просмотр информации об айнодах. Перемещение и удаление
файлов и ссылок.

Для начала создам файлы file1, file2 с одинаковым произвольным содержимым, как этого требует задание:

root@mykitchen:~/lesson3# systemctl status sshd.service > file1
root@mykitchen:~/lesson3# cat file1 
● ssh.service - OpenBSD Secure Shell server
   Loaded: loaded (/lib/systemd/system/ssh.service; enabled; vendor preset: enabled)
   Active: active (running) since Thu 2020-02-27 21:35:37 MSK; 5 days ago
  Process: 1061 ExecStartPre=/usr/sbin/sshd -t (code=exited, status=0/SUCCESS)
 Main PID: 1062 (sshd)
    Tasks: 1 (limit: 524)
   CGroup: /system.slice/ssh.service
           └─1062 /usr/sbin/sshd -D

мар 04 15:25:21 mykitchen sshd[27413]: pam_unix(sshd:auth): authentication failure; logname= uid=0 euid=0 tty=ssh ruser= rhost=106.12.55.118
мар 04 15:25:23 mykitchen sshd[27413]: Failed password for invalid user sftptest from 106.12.55.118 port 44096 ssh2
мар 04 15:25:24 mykitchen sshd[27413]: Received disconnect from 106.12.55.118 port 44096:11: Bye Bye [preauth]
мар 04 15:25:24 mykitchen sshd[27413]: Disconnected from invalid user sftptest 106.12.55.118 port 44096 [preauth]
мар 04 15:25:28 mykitchen sshd[27416]: Invalid user air from 47.180.212.134 port 46773
мар 04 15:25:28 mykitchen sshd[27416]: pam_unix(sshd:auth): check pass; user unknown
мар 04 15:25:28 mykitchen sshd[27416]: pam_unix(sshd:auth): authentication failure; logname= uid=0 euid=0 tty=ssh ruser= rhost=47.180.212.134
мар 04 15:25:30 mykitchen sshd[27416]: Failed password for invalid user air from 47.180.212.134 port 46773 ssh2
мар 04 15:25:31 mykitchen sshd[27416]: Received disconnect from 47.180.212.134 port 46773:11: Bye Bye [preauth]
мар 04 15:25:31 mykitchen sshd[27416]: Disconnected from invalid user air 47.180.212.134 port 46773 [preauth]
root@mykitchen:~/lesson3# cp file1 file2
root@mykitchen:~/lesson3# ls -la
total 16
drwxr-xr-x 2 root root 4096 мар  4 15:26 .
drwxr-xr-x 6 cook cook 4096 мар  4 13:27 ..
-rw-r--r-- 1 root root 1571 мар  4 15:25 file1
-rw-r--r-- 1 root root 1571 мар  4 15:26 file2


Как мы можем убедиться, теперь у меня есть два файла с одинаковым содержимым, далее создадим символическую ссылку file3 и
жесткую ссылку file4, обе они будут смотреть на file1.

root@mykitchen:~/lesson3# ln -s /home/cook/lesson3/file1 /home/cook/lesson3/file3
root@mykitchen:~/lesson3# ln /home/cook/lesson3/file1 /home/cook/lesson3/file4
root@mykitchen:~/lesson3# ls -li
total 12
403813 -rw-r--r-- 2 root root 1571 мар  4 15:25 file1
403814 -rw-r--r-- 1 root root 1571 мар  4 15:26 file2
403815 lrwxrwxrwx 1 root root   24 мар  4 15:33 file3 -> /home/cook/lesson3/file1
403813 -rw-r--r-- 2 root root 1571 мар  4 15:25 file4

Как мы можем убедиться ссылки успешно созданы. Глядя на вывод последней команды можно заметить что символическая ссылка имеет
номер айнода, отлинчый от файла на который она ссылается. Жесткая ссылка имеет такой же номер айнода что и оригинал, по факту
она является дубликатом этого файла,  они оба (file1 и file4) ссылаются на одну и туже физическую область диска. Поэтому удаление
file1 ни как не помшает корректной работе file4,  в отличии от file3, который по сути является простым ярылоком, ссылающимся на оригинальный
file1.

Проверю то что написал выше на практике и удалю file1, после посмотрю сожержимое ссылок:

root@mykitchen:~/lesson3# rm file1
root@mykitchen:~/lesson3# cat file3 
cat: file3: No such file or directory
root@mykitchen:~/lesson3# cat file4 
● ssh.service - OpenBSD Secure Shell server
   Loaded: loaded (/lib/systemd/system/ssh.service; enabled; vendor preset: enabled)
   Active: active (running) since Thu 2020-02-27 21:35:37 MSK; 5 days ago
  Process: 1061 ExecStartPre=/usr/sbin/sshd -t (code=exited, status=0/SUCCESS)
 Main PID: 1062 (sshd)
    Tasks: 1 (limit: 524)
   CGroup: /system.slice/ssh.service
           └─1062 /usr/sbin/sshd -D

мар 04 15:25:21 mykitchen sshd[27413]: pam_unix(sshd:auth): authentication failure; logname= uid=0 euid=0 tty=ssh ruser= rhost=106.12.55.118
мар 04 15:25:23 mykitchen sshd[27413]: Failed password for invalid user sftptest from 106.12.55.118 port 44096 ssh2
мар 04 15:25:24 mykitchen sshd[27413]: Received disconnect from 106.12.55.118 port 44096:11: Bye Bye [preauth]
мар 04 15:25:24 mykitchen sshd[27413]: Disconnected from invalid user sftptest 106.12.55.118 port 44096 [preauth]
мар 04 15:25:28 mykitchen sshd[27416]: Invalid user air from 47.180.212.134 port 46773
мар 04 15:25:28 mykitchen sshd[27416]: pam_unix(sshd:auth): check pass; user unknown
мар 04 15:25:28 mykitchen sshd[27416]: pam_unix(sshd:auth): authentication failure; logname= uid=0 euid=0 tty=ssh ruser= rhost=47.180.212.134
мар 04 15:25:30 mykitchen sshd[27416]: Failed password for invalid user air from 47.180.212.134 port 46773 ssh2
мар 04 15:25:31 mykitchen sshd[27416]: Received disconnect from 47.180.212.134 port 46773:11: Bye Bye [preauth]
мар 04 15:25:31 mykitchen sshd[27416]: Disconnected from invalid user air 47.180.212.134 port 46773 [preauth]

как мы можем видеть символическая ссылка сломалась, так как она теперь не знает на что ссылкаться, file1 не существует. В тоже время
жесткая ссылка продолжает работать.

Вернремся в исходное состояние. Удалю имеющиеся файлы и ссылки и создам по новой.

root@mykitchen:~/lesson3# systemctl status sshd.service > file1
root@mykitchen:~/lesson3# cp file1 file2
root@mykitchen:~/lesson3# ln -s /home/cook/lesson3/file1 /home/cook/lesson3/file3
root@mykitchen:~/lesson3# ln /home/cook/lesson3/file1 /home/cook/lesson3/file4
root@mykitchen:~/lesson3# ls -li
total 12
403813 -rw-r--r-- 2 root root 1592 мар  4 16:59 file1
403814 -rw-r--r-- 1 root root 1592 мар  4 16:59 file2
403815 lrwxrwxrwx 1 root root   24 мар  4 17:01 file3 -> /home/cook/lesson3/file1
403813 -rw-r--r-- 2 root root 1592 мар  4 16:59 file4

и так мы снова имеем файл источник и две ссылки, жесткую и символическую.

2) Дать созданым файлам другие имена, переместить ссылки в другую директорию. Проверить что будет. Поменять на файлы 
права использую символьный и числовой методы.

переименуем файл на который ссылаются ссылки:

root@mykitchen:~/lesson3# mv file1 test_file1
root@mykitchen:~/lesson3# ls -li
total 12
403814 -rw-r--r-- 1 root root 1592 мар  4 16:59 file2
403815 lrwxrwxrwx 1 root root   24 мар  4 17:01 file3 -> /home/cook/lesson3/file1
403813 -rw-r--r-- 2 root root 1592 мар  4 16:59 file4
403813 -rw-r--r-- 2 root root 1592 мар  4 16:59 test_file1

как мы можем видеть имя файла успешно изменено, теперь посмотрим работают ли ссылки.

root@mykitchen:~/lesson3# cat file3 
cat: file3: No such file or directory
root@mykitchen:~/lesson3# cat file4 
● ssh.service - OpenBSD Secure Shell server
   Loaded: loaded (/lib/systemd/system/ssh.service; enabled; vendor preset: enabled)
   Active: active (running) since Thu 2020-02-27 21:35:37 MSK; 5 days ago
  Process: 1061 ExecStartPre=/usr/sbin/sshd -t (code=exited, status=0/SUCCESS)
 Main PID: 1062 (sshd)
    Tasks: 3 (limit: 524)
   CGroup: /system.slice/ssh.service
           ├─ 1062 /usr/sbin/sshd -D
           ├─28260 sshd: [accepted]
           └─28261 sshd: [net]

мар 04 16:58:28 mykitchen sshd[28243]: Failed password for invalid user fujino from 122.51.115.76 port 41394 ssh2
мар 04 16:58:29 mykitchen sshd[28243]: Received disconnect from 122.51.115.76 port 41394:11: Bye Bye [preauth]
мар 04 16:58:29 mykitchen sshd[28243]: Disconnected from invalid user fujino 122.51.115.76 port 41394 [preauth]
мар 04 16:58:33 mykitchen sshd[28248]: Invalid user web from 219.142.140.2 port 62429
мар 04 16:58:33 mykitchen sshd[28248]: pam_unix(sshd:auth): check pass; user unknown
мар 04 16:58:33 mykitchen sshd[28248]: pam_unix(sshd:auth): authentication failure; logname= uid=0 euid=0 tty=ssh ruser= rhost=219.142.140.2
мар 04 16:58:35 mykitchen sshd[28248]: Failed password for invalid user web from 219.142.140.2 port 62429 ssh2
мар 04 16:58:35 mykitchen sshd[28248]: Received disconnect from 219.142.140.2 port 62429:11: Bye Bye [preauth]
мар 04 16:58:35 mykitchen sshd[28248]: Disconnected from invalid user web 219.142.140.2 port 62429 [preauth]
мар 04 16:58:36 mykitchen sshd[28239]: Connection closed by 182.61.150.73 port 39858 [preauth]

как видно выше, символическая ссылка опять перестала работать, так как не может найти файл на который она ранее ссылалась.
Жесткая ссылка продолжает работать, так как она ссылается на айноду а не на имя файла и ей все равно, какое имя имеел файл источник.

верну файлу test_file1 прежнее имя, и починю символическую ссылку

root@mykitchen:~/lesson3# mv test_file1 file1
root@mykitchen:~/lesson3# ls -li
total 12
403813 -rw-r--r-- 2 root root 1592 мар  4 16:59 file1
403814 -rw-r--r-- 1 root root 1592 мар  4 16:59 file2
403815 lrwxrwxrwx 1 root root   24 мар  4 17:01 file3 -> /home/cook/lesson3/file1
403813 -rw-r--r-- 2 root root 1592 мар  4 16:59 file4
root@mykitchen:~/lesson3# cat file3
● ssh.service - OpenBSD Secure Shell server
   Loaded: loaded (/lib/systemd/system/ssh.service; enabled; vendor preset: enabled)
   Active: active (running) since Thu 2020-02-27 21:35:37 MSK; 5 days ago
  Process: 1061 ExecStartPre=/usr/sbin/sshd -t (code=exited, status=0/SUCCESS)
 Main PID: 1062 (sshd)
    Tasks: 3 (limit: 524)
   CGroup: /system.slice/ssh.service
           ├─ 1062 /usr/sbin/sshd -D
           ├─28260 sshd: [accepted]
           └─28261 sshd: [net]

мар 04 16:58:28 mykitchen sshd[28243]: Failed password for invalid user fujino from 122.51.115.76 port 41394 ssh2
мар 04 16:58:29 mykitchen sshd[28243]: Received disconnect from 122.51.115.76 port 41394:11: Bye Bye [preauth]
мар 04 16:58:29 mykitchen sshd[28243]: Disconnected from invalid user fujino 122.51.115.76 port 41394 [preauth]
мар 04 16:58:33 mykitchen sshd[28248]: Invalid user web from 219.142.140.2 port 62429
мар 04 16:58:33 mykitchen sshd[28248]: pam_unix(sshd:auth): check pass; user unknown
мар 04 16:58:33 mykitchen sshd[28248]: pam_unix(sshd:auth): authentication failure; logname= uid=0 euid=0 tty=ssh ruser= rhost=219.142.140.2
мар 04 16:58:35 mykitchen sshd[28248]: Failed password for invalid user web from 219.142.140.2 port 62429 ssh2
мар 04 16:58:35 mykitchen sshd[28248]: Received disconnect from 219.142.140.2 port 62429:11: Bye Bye [preauth]
мар 04 16:58:35 mykitchen sshd[28248]: Disconnected from invalid user web 219.142.140.2 port 62429 [preauth]
мар 04 16:58:36 mykitchen sshd[28239]: Connection closed by 182.61.150.73 port 39858 [preauth]

ссылка вновь работает, теперь перемещу ссылки в другую директорию, например в мою домашнюю директорию cook

root@mykitchen:~/lesson3# mv file3 /home/cook/
root@mykitchen:~/lesson3# mv file4 /home/cook/
root@mykitchen:~/lesson3# cd ../
root@mykitchen:~# ls -la
total 52
drwxr-xr-x 6 cook cook 4096 мар  4 17:17 .
drwxr-xr-x 3 root root 4096 фев 27 21:07 ..
-rw------- 1 root root 1024 мар  4 15:38 .bash_history
-rw-r--r-- 1 cook cook  220 фев 27 21:07 .bash_logout
-rw-r--r-- 1 cook cook 3771 фев 27 21:07 .bashrc
drwx------ 2 cook cook 4096 фев 27 21:32 .cache
lrwxrwxrwx 1 root root   24 мар  4 17:01 file3 -> /home/cook/lesson3/file1
-rw-r--r-- 2 root root 1592 мар  4 16:59 file4
drwx------ 3 cook cook 4096 фев 27 21:32 .gnupg
drwxr-xr-x 2 root root 4096 мар  4 17:17 lesson3
-rw-r--r-- 1 cook cook  807 фев 27 21:07 .profile
drwxr-xr-x 2 cook cook 4096 фев 27 21:45 .ssh
-rw-r--r-- 1 cook cook    0 фев 27 21:32 .sudo_as_admin_successful
-rw------- 1 cook cook 6822 мар  3 14:07 .viminfo

ссылки переместил, теперь посмотрим работают ли они
root@mykitchen:~# cat file3 
● ssh.service - OpenBSD Secure Shell server
   Loaded: loaded (/lib/systemd/system/ssh.service; enabled; vendor preset: enabled)
   Active: active (running) since Thu 2020-02-27 21:35:37 MSK; 5 days ago
  Process: 1061 ExecStartPre=/usr/sbin/sshd -t (code=exited, status=0/SUCCESS)
 Main PID: 1062 (sshd)
    Tasks: 3 (limit: 524)
   CGroup: /system.slice/ssh.service
           ├─ 1062 /usr/sbin/sshd -D
           ├─28260 sshd: [accepted]
           └─28261 sshd: [net]

мар 04 16:58:28 mykitchen sshd[28243]: Failed password for invalid user fujino from 122.51.115.76 port 41394 ssh2
мар 04 16:58:29 mykitchen sshd[28243]: Received disconnect from 122.51.115.76 port 41394:11: Bye Bye [preauth]
мар 04 16:58:29 mykitchen sshd[28243]: Disconnected from invalid user fujino 122.51.115.76 port 41394 [preauth]
мар 04 16:58:33 mykitchen sshd[28248]: Invalid user web from 219.142.140.2 port 62429
мар 04 16:58:33 mykitchen sshd[28248]: pam_unix(sshd:auth): check pass; user unknown
мар 04 16:58:33 mykitchen sshd[28248]: pam_unix(sshd:auth): authentication failure; logname= uid=0 euid=0 tty=ssh ruser= rhost=219.142.140.2
мар 04 16:58:35 mykitchen sshd[28248]: Failed password for invalid user web from 219.142.140.2 port 62429 ssh2
мар 04 16:58:35 mykitchen sshd[28248]: Received disconnect from 219.142.140.2 port 62429:11: Bye Bye [preauth]
мар 04 16:58:35 mykitchen sshd[28248]: Disconnected from invalid user web 219.142.140.2 port 62429 [preauth]
мар 04 16:58:36 mykitchen sshd[28239]: Connection closed by 182.61.150.73 port 39858 [preauth]
root@mykitchen:~# cat file4 
● ssh.service - OpenBSD Secure Shell server
   Loaded: loaded (/lib/systemd/system/ssh.service; enabled; vendor preset: enabled)
   Active: active (running) since Thu 2020-02-27 21:35:37 MSK; 5 days ago
  Process: 1061 ExecStartPre=/usr/sbin/sshd -t (code=exited, status=0/SUCCESS)
 Main PID: 1062 (sshd)
    Tasks: 3 (limit: 524)
   CGroup: /system.slice/ssh.service
           ├─ 1062 /usr/sbin/sshd -D
           ├─28260 sshd: [accepted]
           └─28261 sshd: [net]

мар 04 16:58:28 mykitchen sshd[28243]: Failed password for invalid user fujino from 122.51.115.76 port 41394 ssh2
мар 04 16:58:29 mykitchen sshd[28243]: Received disconnect from 122.51.115.76 port 41394:11: Bye Bye [preauth]
мар 04 16:58:29 mykitchen sshd[28243]: Disconnected from invalid user fujino 122.51.115.76 port 41394 [preauth]
мар 04 16:58:33 mykitchen sshd[28248]: Invalid user web from 219.142.140.2 port 62429
мар 04 16:58:33 mykitchen sshd[28248]: pam_unix(sshd:auth): check pass; user unknown
мар 04 16:58:33 mykitchen sshd[28248]: pam_unix(sshd:auth): authentication failure; logname= uid=0 euid=0 tty=ssh ruser= rhost=219.142.140.2
мар 04 16:58:35 mykitchen sshd[28248]: Failed password for invalid user web from 219.142.140.2 port 62429 ssh2
мар 04 16:58:35 mykitchen sshd[28248]: Received disconnect from 219.142.140.2 port 62429:11: Bye Bye [preauth]
мар 04 16:58:35 mykitchen sshd[28248]: Disconnected from invalid user web 219.142.140.2 port 62429 [preauth]
мар 04 16:58:36 mykitchen sshd[28239]: Connection closed by 182.61.150.73 port 39858 [preauth]

работают, так как местоположение файла на который они ссылаются не менялось, в в самих ссылках прописал абсолютный путь до файла, 
а не относительный, поэтому они не ориентируются на текущий каталог где находятся саами. Более того я уверен что жесткая ссылка
продолжит работать, даже если переместить файл источник, символическая работать перестанет.

root@mykitchen:~# cd lesson3/
root@mykitchen:~/lesson3# mv file1 /home/cook/
root@mykitchen:~/lesson3# cd ../
root@mykitchen:~# ls -li
total 12
403813 -rw-r--r-- 2 root root 1592 мар  4 16:59 file1
403815 lrwxrwxrwx 1 root root   24 мар  4 17:01 file3 -> /home/cook/lesson3/file1
403813 -rw-r--r-- 2 root root 1592 мар  4 16:59 file4
403812 drwxr-xr-x 2 root root 4096 мар  4 17:20 lesson3

перенес наш файл источник на уровень выше в мою домашнюю директорию

root@mykitchen:~# cat file3
cat: file3: No such file or directory
root@mykitchen:~# cat file4
● ssh.service - OpenBSD Secure Shell server
   Loaded: loaded (/lib/systemd/system/ssh.service; enabled; vendor preset: enabled)
   Active: active (running) since Thu 2020-02-27 21:35:37 MSK; 5 days ago
  Process: 1061 ExecStartPre=/usr/sbin/sshd -t (code=exited, status=0/SUCCESS)
 Main PID: 1062 (sshd)
    Tasks: 3 (limit: 524)
   CGroup: /system.slice/ssh.service
           ├─ 1062 /usr/sbin/sshd -D
           ├─28260 sshd: [accepted]
           └─28261 sshd: [net]

мар 04 16:58:28 mykitchen sshd[28243]: Failed password for invalid user fujino from 122.51.115.76 port 41394 ssh2
мар 04 16:58:29 mykitchen sshd[28243]: Received disconnect from 122.51.115.76 port 41394:11: Bye Bye [preauth]
мар 04 16:58:29 mykitchen sshd[28243]: Disconnected from invalid user fujino 122.51.115.76 port 41394 [preauth]
мар 04 16:58:33 mykitchen sshd[28248]: Invalid user web from 219.142.140.2 port 62429
мар 04 16:58:33 mykitchen sshd[28248]: pam_unix(sshd:auth): check pass; user unknown
мар 04 16:58:33 mykitchen sshd[28248]: pam_unix(sshd:auth): authentication failure; logname= uid=0 euid=0 tty=ssh ruser= rhost=219.142.140.2
мар 04 16:58:35 mykitchen sshd[28248]: Failed password for invalid user web from 219.142.140.2 port 62429 ssh2
мар 04 16:58:35 mykitchen sshd[28248]: Received disconnect from 219.142.140.2 port 62429:11: Bye Bye [preauth]
мар 04 16:58:35 mykitchen sshd[28248]: Disconnected from invalid user web 219.142.140.2 port 62429 [preauth]
мар 04 16:58:36 mykitchen sshd[28239]: Connection closed by 182.61.150.73 port 39858 [preauth]

символическая ссылка теперь ожидаемо не работает, а жесткая работает. Но тут важен 1 момент, она более не явялется ссылкой на 
file1, есл ипосмотреть выво команды ls -li, то можно заметить что номер айнод у них теперь различаются и оба файла ссылаются на
разные физические области диска. Проверим на практике, внеся изменения в файл 1

root@mykitchen:~# echo "Hello" > file1 
root@mykitchen:~# cat file1
Hello
root@mykitchen:~# cat file4
Hello

Честно говоря данный результат для меня является большим сюрпризом, я оджидал, что теперь file1 и file4 живут раздельной жизнью,
но нет. Они по прежнему являются файлом источником и ссылкой на него.


Перехожу к работе с правами. Создам два новый файла и наполню их каким нибудь содержимым.

root@mykitchen:~/lesson3# ps aux | tail -n 5
root     27241  0.0  1.1  24212  5700 pts/1    S    15:07   0:00 /bin/bash
root     28535  0.0  0.0      0     0 ?        I    17:23   0:00 [kworker/u2:0]
root     28635  0.0  0.0      0     0 ?        I    17:36   0:00 [kworker/u2:1]
root     28675  0.0  0.7  41188  3744 pts/1    R+   17:41   0:00 ps aux
root     28676  0.0  0.1   9032   768 pts/1    S+   17:41   0:00 tail -n 5
root@mykitchen:~/lesson3# ps aux | tail -n 5 > top_process1
root@mykitchen:~/lesson3# ps aux | tail -n 5 > top_process2
root@mykitchen:~/lesson3# ls -l
total 8
-rw-r--r-- 1 root root 382 мар  4 17:42 top_process1
-rw-r--r-- 1 root root 382 мар  4 17:42 top_process2

Сейчас я имею два файла с одинаковыми правами. Попробуем первому файлу присвоить права на чтение, запись для владельца и 
группы,только на чтение — для всех. В числовом виде это будет выглядеть как:

read = 4
write = 2
execute = 1

соответсвенно мы получим комбинацию 664, 6 для владельца, 6 для группы владельца и 4 для всех остальный, применим на практике

root@mykitchen:~/lesson3# chmod 664 top_process1
root@mykitchen:~/lesson3# ls -la
total 16
drwxr-xr-x 2 root root 4096 мар  4 17:42 .
drwxr-xr-x 6 cook cook 4096 мар  4 17:20 ..
-rw-rw-r-- 1 root root  382 мар  4 17:42 top_process1
-rw-r--r-- 1 root root  382 мар  4 17:42 top_process2

Как мы можем убедиться права действительно изменились, идем дальше. Второму присвоить права на чтение, запись — только для владельца. 
Данную операцию сделаю в символьном виде, для разнообразия.

в данном случае нужно так же учитывать последовательность, так как права делятся на три группы

права владельца - user (u)
права группы владельца - group (g)
права для всех остальных - others (o)

root@mykitchen:~/lesson3# chmod u=rw-,g=---,o=--- top_process2
root@mykitchen:~/lesson3# ls -l
total 8
-rw-rw-r-- 1 root root 382 мар  4 17:42 top_process1
-rw------- 1 root root 382 мар  4 17:42 top_process2

как мы можем заметить права изменились, так как мы и ожидали. Сам я предпочитаю использовать цифровой метод, так как он менее грамосткий
с точки зрения написания и более понятный мне.




3) Создать пользователя, обладающего возможностью выполнять действия от имени суперпользователя.

для создания пользователя воспользуюьс утилитой adduser

root@mykitchen:~/lesson3# adduser test
Adding user `test' ...
Adding new group `test' (1001) ...
Adding new user `test' (1001) with group `test' ...
Creating home directory `/home/test' ...
Copying files from `/etc/skel' ...
Enter new UNIX password: 
Retype new UNIX password: 
Sorry, passwords do not match
passwd: Authentication token manipulation error
passwd: password unchanged
Try again? [y/N] Y
Enter new UNIX password: 
Retype new UNIX password: 
passwd: password updated successfully
Changing the user information for test
Enter the new value, or press ENTER for the default
	Full Name []: test
	Room Number []: 
	Work Phone []: 
	Home Phone []: 
	Other []: 
Is the information correct? [Y/n] Y

root@mykitchen:~/lesson3# ls /home/
cook  test

появился новый пользователь и его домашняя директория

root@mykitchen:~/lesson3# ls /home/
cook  test
root@mykitchen:~/lesson3# id test
uid=1001(test) gid=1001(test) groups=1001(test)

пора присвоить нашему новому пользователю право выполнять команды с привелегиями супервользователя, для этого нужно добавить его
в группу sudo:

root@mykitchen:~/lesson3# usermod -aG sudo test 
root@mykitchen:~/lesson3# id test 
uid=1001(test) gid=1001(test) groups=1001(test),27(sudo)

4) Создать группу developer и несколько пользователей, входящих в нее. Создать директорию для совместной работы. Сделать так,
чтобы созданные одними пользователями файлы могли изменять другие пользователи этой группы.

root@mykitchen:~/lesson3# addgroup developers
Adding group `developers' (GID 1002) ...
Done.
root@mykitchen:~/lesson3# cat /etc/group | grep developers
developers:x:1002:

группу создали, теперь добавим в нее пользователей, добавлю себя (cook) и недавно соданный (test), сделаю это не при помощи команды
usermod, а при помощи дерактирования файла /etc/groups, для этого нам понадобятся uid пользователей.

root@mykitchen:~/lesson3# id cook 
uid=1000(cook) gid=1000(cook) groups=1000(cook),27(sudo)
root@mykitchen:~/lesson3# id test
uid=1001(test) gid=1001(test) groups=1001(test),27(sudo)

добавилю руками наших пользователей в этот файлик

root@mykitchen:~/lesson3# vim /etc/group
root@mykitchen:~/lesson3# tail -n -5 /etc/group
ssl-cert:x:111:
rdma:x:112:
cook:x:1000:
test:x:1001:
developers:x:1002:cook,test

как мы можем ниже убедиться, пользователи состоят в группе developers

root@mykitchen:~/lesson3# id cook 
uid=1000(cook) gid=1000(cook) groups=1000(cook),27(sudo),1002(developers)
root@mykitchen:~/lesson3# id test
uid=1001(test) gid=1001(test) groups=1001(test),27(sudo),1002(developers)


 дем дальше, нужно Создать директорию для совместной работы. Сделать так, чтобы созданные одними пользователями файлы
могли изменять другие пользователи этой группы.

создам отдельную директорию work и парочку файлов

root@mykitchen:~/lesson3# mkdir work
root@mykitchen:~/lesson3# touch work/testfile1
root@mykitchen:~/lesson3# touch work/testfile2
root@mykitchen:~/lesson3# ls -l
total 12
-rw-rw-r-- 1 root root  382 мар  4 17:42 top_process1
-rw------- 1 root root  382 мар  4 17:42 top_process2
drwxr-xr-x 2 root root 4096 мар  4 18:11 work

директория и файлы созданы, как мы видем выше ими полностью владее т root, все прочие пользователи могут лишь просматривать содержимое
директории worк. Изменим права группу пользователей у директории и файлов,а так же изменим сами права, что бы запретить всем остальным
пользователям что либо делать с этими файлами и директорией.

root@mykitchen:~/lesson3# chgrp -R developers work
root@mykitchen:~/lesson3# chmod -R 770 work
root@mykitchen:~/lesson3# ls -l
total 12
-rw-rw-r-- 1 root root        382 мар  4 17:42 top_process1
-rw------- 1 root root        382 мар  4 17:42 top_process2
drwxrwx--- 2  770 developers 4096 мар  4 18:11 work
root@mykitchen:~/lesson3# ls -l work/
total 0
-rwxrwx--- 1 770 developers 0 мар  4 18:11 testfile1
-rwxrwx--- 1 770 developers 0 мар  4 18:11 testfile2

как мы можем видеть, файлы testfile1 и testfile2 доступны для чтения, записи и исполнения для пользователя root и группы developers.
директрию work, могут просматривать и работать в ней только root и группа пользователей developers.

попробуем изменить файл testfile1 из под пользователя cook, а затем из под test

выхожу из под пользователя  root, наинаю работать из под cook, запишу в файл одну строчку

cook@mykitchen:~$ cat /etc/hostname > /home/cook/lesson3/work/testfile1
cook@mykitchen:~$ cat /home/cook/lesson3/work/testfile1 
mykitchen`

затем зайду под пользователя test и попробую изменить этот же файл

cook@mykitchen:~$ su test
Password: 
To run a command as administrator (user "root"), use "sudo <command>".
See "man sudo_root" for details.

test@mykitchen:/home/cook$ echo "Hello World!" >> /home/cook/lesson3/work/testfile1
test@mykitchen:/home/cook$ cat /home/cook/lesson3/work/testfile1
mykitchen`
Hello World!


как мы можем видеть, действительно оба пользователя могут что либо делать с этим файлом. 


5) Создать в директории для совместной работы поддиректорию для обмена файлами, 
но чтобы удалять файлы могли только их создатели.

cook@mykitchen:~/lesson3/work$ mkdir common_dir
cook@mykitchen:~/lesson3/work$ cd common_dir/
cook@mykitchen:~/lesson3/work/common_dir$ touch common_file1
cook@mykitchen:~/lesson3/work/common_dir$ ls -la
total 8
drwxrwxr-x 2 cook cook       4096 мар  5 17:51 .
drwxrwx--- 3  770 developers 4096 мар  5 17:50 ..
-rw-rw-r-- 1 cook cook          0 мар  5 17:51 common_file1

Для того что бы файл ни кто кроме владельца не мог удалить, я буду использовать Sticky Bit, он добавляется в команде chmod перед
основными правами на файл, по умолчанию он 0, но если выставить его в 1, то файл будет защищен от удаления, теми кто может его редактировать.

cook@mykitchen:~/lesson3/work/common_dir$ chmod 1770 common_file1 
cook@mykitchen:~/lesson3/work/common_dir$ chgrp developers common_file1 
cook@mykitchen:~/lesson3/work/common_dir$ ls -l
total 0
-rwxrwx--T 1 cook developers 0 мар  5 17:51 common_file1

Как мы можем заметить выше символ T обозначет, то что Sticky Bit выставлен в значение 1.

Сменим пользователя, и попробуем изменить а затем удалить файл common_file1

root@mykitchen:~# su test
To run a command as administrator (user "root"), use "sudo <command>".
See "man sudo_root" for details.

test@mykitchen:/home/cook$ cd lesson3/
test@mykitchen:/home/cook/lesson3$ cd work/
test@mykitchen:/home/cook/lesson3/work$ cd common_dir/
test@mykitchen:/home/cook/lesson3/work/common_dir$ ls -l
total 4
-rwxrwx--T 1 cook developers 12 мар  5 18:16 common_file1
test@mykitchen:/home/cook/lesson3/work/common_dir$ echo "Hello cook!" > common_file1 
test@mykitchen:/home/cook/lesson3/work/common_dir$ cat common_file1 
Hello cook!

как мы можем заметить, я успешно отредактировал файл, теперь попробую его удалить.

test@mykitchen:/home/cook/lesson3/work/common_dir$ rm common_file1 
rm: cannot remove 'common_file1': Permission denied

как мы видим ничего не выходит, хотя пользователь test входит в группу developers и имеет права rwx на этот файл, он не может
его удалить, потому что ранее я поставил на файл от лица пользователя cook, так называемый sticky bit, он защищает файлы владельца
от удаления, кем либо, кому файл доступен для работы. Тоже самое можно делать и с директориями.

6) * Создать директорию, в которой есть несколько файлов. Сделать так, чтобы открыть файлы можно было, только зная 
имя файла, а через ls список файлов посмотреть было нельзя.


Для выполнения этого задания воспользуюсь уже имеющейся директорией common_dir, в которой ранее создавал файлы и они были
доступны для группы developers. Для того, что бы убрать возмодность видеть содержимое директории, надо оставить права на испольнение
и убрать все остальное, в таком случае я смогу попасть внутрь директории и работать в ней, но не смогу прочесть её содержимое.

root@mykitchen:~/lesson3/work# ls common_dir/
common_file1
root@mykitchen:~/lesson3/work# chmod 111 common_dir/
root@mykitchen:~/lesson3/work# ls common_dir/
common_file1
root@mykitchen:~/lesson3/work# exit

Меняю прользователя, что бы работать из под cook, так как он в группе developers

cook@mykitchen:~$ cd lesson3/work/
cook@mykitchen:~/lesson3/work$ ls common_dir/
ls: cannot open directory 'common_dir/': Permission denied
cook@mykitchen:~/lesson3/work$ cd common_dir/
cook@mykitchen:~/lesson3/work/common_dir$ ls
ls: cannot open directory '.': Permission denied
cook@mykitchen:~/lesson3/work/common_dir$ cat common_file1
Hello cook!
cook@mykitchen:~/lesson3/work/common_dir$ 

Как мы можем видеть, я не могу посмотреть список файлов директории common_dir но легко могу открыть файл common_file1, с
учетом того что я знаю его имя конечно.



