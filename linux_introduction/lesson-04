1) Написать скрипт, который удаляет из текстового файла пустые строки и заменяет маленькие символы на большие. 

Для начала создам текстовый файл, в котором будут слова из символов разного регистра и пустые строки.

root@mykitchen:~/lesson4# touch test_file
root@mykitchen:~/lesson4# vim test_file 
root@mykitchen:~/lesson4# cat test_file 
Hello World!

hello world!

test text file.

И так мы видим, что в моём файле 5 строк, 3 из них заполнены разными словами, 2 между ними совсем пустые. Теперь перходим к
создание файла для скрипта.

root@mykitchen:~/lesson4# touch script1.sh
root@mykitchen:~/lesson4# chmod 760 script1.sh 
root@mykitchen:~/lesson4# ls -l
total 8
-rwxrw---- 1 root root 312 мар 12 23:25 script1.sh
-rw-r--r-- 1 root root  44 мар 12 22:32 test_file

и так мы создали сам файл и дали этому файлу возможность исполнения, такое право имеет только владелец, переходим к написанию
скрипта
root@mykitchen:~/lesson4# vim script1.sh

#!/bin/bash
#при помощи команды tr (translate) - которая позволяет преобразовывать символы, заменим все символы нижнего регистра на символы верхнего регистра
cat test_file | tr '[:lower:]' '[:upper:]' > test_file1&&cat test_file1
echo "Отлично, все семволы в строках файла теперь в верхнем регистре! Продолжим работать с файлом, удалим пустые строки."
#теперь удалим все пустые строки из файла. Снова при помощи команды tr где ключ -s уберет все пустые строки (\n - обозначает новую строку)
tr -s '\n' < test_file1 > result_file&&cat result_file
echo "Теперь из файла удалены пустые строки и он приведен к нужному нам виду"

wq!

root@mykitchen:~/lesson4# ./script1.sh 
HELLO WORLD!

HELLO WORLD!

TEST TEXT FILE.

Отлично, все семволы в строках файла теперь в верхнем регистре! Продолжим работать с файлом, удалим пустые строки.
HELLO WORLD!
HELLO WORLD!
TEST TEXT FILE.
Теперь из файла удалены пустые строки и он приведен к нужному нам виду


В результате работы скрипта были созданы новые файлы со следующим содержимым:

root@mykitchen:~/lesson4# ls -l
total 16
-rw-r--r-- 1 root root  42 мар 13 00:06 result_file
-rwxrw---- 1 root root 992 мар 13 00:06 script1.sh
-rw-r--r-- 1 root root  45 мар 13 00:02 test_file
-rw-r--r-- 1 root root  45 мар 13 00:06 test_file1

root@mykitchen:~/lesson4# cat test_file
Hello World!

hello world!

test text file.

root@mykitchen:~/lesson4# cat test_file1
HELLO WORLD!

HELLO WORLD!

TEST TEXT FILE.

root@mykitchen:~/lesson4# cat result_file 
HELLO WORLD!
HELLO WORLD!
TEST TEXT FILE.



root@mykitchen:~/lesson4# cat test_file
Hello World!

hello world!

test text file.

root@mykitchen:~/lesson4# cat test_file1
HELLO WORLD!

HELLO WORLD!

TEST TEXT FILE.

root@mykitchen:~/lesson4# cat result_file 
HELLO WORLD!
HELLO WORLD!
TEST TEXT FILE.

2) Создать директории, поддиректории и файлы с произвольными записями.

Сразу перейдем к созданию файла, в котором будем писать наш скрипт и наделим файл нужными правами на исполнение.
root@mykitchen:~/lesson4/task2# touch script2.sh
root@mykitchen:~/lesson4/task2# chmod 760 script2.sh 
root@mykitchen:~/lesson4/task2# ls -l
total 0
-rwxrw---- 1 root root 0 мар 13 00:14 script2.sh

root@mykitchen:~/lesson4/task2# vim script2.sh

#!/bin/bash
#создадим директории и поддиректории, для создания вложеных директорий используем ключ -p
mkdir -p dir20{10..17}/{01..12} 
ls -l
echo "Как мы видим директории созданы, рекурсивно не вывожу список, потому что будет он будет большой, вывод получится грамосткий"
#Далее напишем небольшой скрипт с использованием цикла for, где A b B переменные, а последовательности dir{2010..2017} и {01..12} их значения
for A in dir{2010..2017} 
do
       for B in {01..12}
       do
        touch ~/lesson4/task2/$A/$B/test_file_$A--$B--{01..30}            
       done
done



root@mykitchen:~/lesson4/task2# ./script2.sh 
total 36
drwxr-xr-x 14 root root 4096 мар 13 15:51 dir2010
drwxr-xr-x 14 root root 4096 мар 13 15:51 dir2011
drwxr-xr-x 14 root root 4096 мар 13 15:51 dir2012
drwxr-xr-x 14 root root 4096 мар 13 15:51 dir2013
drwxr-xr-x 14 root root 4096 мар 13 15:51 dir2014
drwxr-xr-x 14 root root 4096 мар 13 15:51 dir2015
drwxr-xr-x 14 root root 4096 мар 13 15:51 dir2016
drwxr-xr-x 14 root root 4096 мар 13 15:51 dir2017
-rwxrw----  1 root root  839 мар 13 15:51 script2.sh
Как мы видим директории созданы, рекурсивно не вывожу список, потому что будет он будет большой, вывод получится грамосткий
root@mykitchen:~/lesson4/task2# ls -l
total 36
drwxr-xr-x 14 root root 4096 мар 13 15:51 dir2010
drwxr-xr-x 14 root root 4096 мар 13 15:51 dir2011
drwxr-xr-x 14 root root 4096 мар 13 15:51 dir2012
drwxr-xr-x 14 root root 4096 мар 13 15:51 dir2013
drwxr-xr-x 14 root root 4096 мар 13 15:51 dir2014
drwxr-xr-x 14 root root 4096 мар 13 15:51 dir2015
drwxr-xr-x 14 root root 4096 мар 13 15:51 dir2016
drwxr-xr-x 14 root root 4096 мар 13 15:51 dir2017
-rwxrw----  1 root root  839 мар 13 15:51 script2.sh
root@mykitchen:~/lesson4/task2# cd dir2010
root@mykitchen:~/lesson4/task2/dir2010# ls
01  02  03  04  05  06  07  08  09  10  11  12
root@mykitchen:~/lesson4/task2/dir2010# cd 01
root@mykitchen:~/lesson4/task2/dir2010/01# ls
test_file_dir2010--01--01  test_file_dir2010--01--06  test_file_dir2010--01--11  test_file_dir2010--01--16  test_file_dir2010--01--21  test_file_dir2010--01--26
test_file_dir2010--01--02  test_file_dir2010--01--07  test_file_dir2010--01--12  test_file_dir2010--01--17  test_file_dir2010--01--22  test_file_dir2010--01--27
test_file_dir2010--01--03  test_file_dir2010--01--08  test_file_dir2010--01--13  test_file_dir2010--01--18  test_file_dir2010--01--23  test_file_dir2010--01--28
test_file_dir2010--01--04  test_file_dir2010--01--09  test_file_dir2010--01--14  test_file_dir2010--01--19  test_file_dir2010--01--24  test_file_dir2010--01--29
test_file_dir2010--01--05  test_file_dir2010--01--10  test_file_dir2010--01--15  test_file_dir2010--01--20  test_file_dir2010--01--25  test_file_dir2010--01--30


как мы можем убедиться, файлы и директории созданы. Вот с записью сразу во все эти файлы различного содержимого я пока
не смог рахобраться. Не понимаю может ли echo писать в файлы когда в пути указывается перечеисление dir{10..17}/{0..12}/test_file_dir*
